// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE

import { createMxObject } from "../NanoflowCommonsITvisorsUtils";

// END EXTRA CODE

/**
 * Split a string using the specified split parameter
 * When the split parameter is an empty string, each list item will contain a single character.
 * @param {string} inputString
 * @param {string} splitParameter
 * @returns {Promise.<MxObject[]>}
 */
export async function StringSplit(inputString, splitParameter) {
	// BEGIN USER CODE

	const createSplitItem = async (splitItem, i) => {
		mxObj = await createMxObject("NanoflowCommonsITvisors.SplitItem");
		mxObj.set("Index", i);
		mxObj.set("Value", splitItem);
		return mxObj;
	};

	if (splitParameter === undefined || splitParameter === null || !splitParameter) {
		return Promise.reject(new Error("StringSplit: splitParameter must not be empty"));
	}
	if (!inputString) {
		return Promise.resolve(undefined);
	}

	const splitArray = inputString.split(splitParameter);
	const result = [];
	for (let i = 0; i < splitArray.length; i++) {
		const splitItem = splitArray[i];
		result.push(createSplitItem(splitItem, i));
	}
	return Promise.all(result);

	// END USER CODE
}

// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testmodule.proxies;

public class NativeContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nativeContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestModule.NativeContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DroppedItemID("DroppedItemID"),
		DropData("DropData"),
		DropFrom("DropFrom"),
		DropTo("DropTo");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public NativeContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestModule.NativeContext"));
	}

	protected NativeContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nativeContextMendixObject)
	{
		if (nativeContextMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestModule.NativeContext", nativeContextMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestModule.NativeContext");

		this.nativeContextMendixObject = nativeContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'NativeContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testmodule.proxies.NativeContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testmodule.proxies.NativeContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testmodule.proxies.NativeContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testmodule.proxies.NativeContext(context, mendixObject);
	}

	public static testmodule.proxies.NativeContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testmodule.proxies.NativeContext.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DroppedItemID
	 */
	public final java.lang.String getDroppedItemID()
	{
		return getDroppedItemID(getContext());
	}

	/**
	 * @param context
	 * @return value of DroppedItemID
	 */
	public final java.lang.String getDroppedItemID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DroppedItemID.toString());
	}

	/**
	 * Set value of DroppedItemID
	 * @param droppeditemid
	 */
	public final void setDroppedItemID(java.lang.String droppeditemid)
	{
		setDroppedItemID(getContext(), droppeditemid);
	}

	/**
	 * Set value of DroppedItemID
	 * @param context
	 * @param droppeditemid
	 */
	public final void setDroppedItemID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String droppeditemid)
	{
		getMendixObject().setValue(context, MemberNames.DroppedItemID.toString(), droppeditemid);
	}

	/**
	 * @return value of DropData
	 */
	public final java.lang.String getDropData()
	{
		return getDropData(getContext());
	}

	/**
	 * @param context
	 * @return value of DropData
	 */
	public final java.lang.String getDropData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DropData.toString());
	}

	/**
	 * Set value of DropData
	 * @param dropdata
	 */
	public final void setDropData(java.lang.String dropdata)
	{
		setDropData(getContext(), dropdata);
	}

	/**
	 * Set value of DropData
	 * @param context
	 * @param dropdata
	 */
	public final void setDropData(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String dropdata)
	{
		getMendixObject().setValue(context, MemberNames.DropData.toString(), dropdata);
	}

	/**
	 * @return value of DropFrom
	 */
	public final java.lang.Integer getDropFrom()
	{
		return getDropFrom(getContext());
	}

	/**
	 * @param context
	 * @return value of DropFrom
	 */
	public final java.lang.Integer getDropFrom(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DropFrom.toString());
	}

	/**
	 * Set value of DropFrom
	 * @param dropfrom
	 */
	public final void setDropFrom(java.lang.Integer dropfrom)
	{
		setDropFrom(getContext(), dropfrom);
	}

	/**
	 * Set value of DropFrom
	 * @param context
	 * @param dropfrom
	 */
	public final void setDropFrom(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer dropfrom)
	{
		getMendixObject().setValue(context, MemberNames.DropFrom.toString(), dropfrom);
	}

	/**
	 * @return value of DropTo
	 */
	public final java.lang.Integer getDropTo()
	{
		return getDropTo(getContext());
	}

	/**
	 * @param context
	 * @return value of DropTo
	 */
	public final java.lang.Integer getDropTo(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.DropTo.toString());
	}

	/**
	 * Set value of DropTo
	 * @param dropto
	 */
	public final void setDropTo(java.lang.Integer dropto)
	{
		setDropTo(getContext(), dropto);
	}

	/**
	 * Set value of DropTo
	 * @param context
	 * @param dropto
	 */
	public final void setDropTo(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer dropto)
	{
		getMendixObject().setValue(context, MemberNames.DropTo.toString(), dropto);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nativeContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testmodule.proxies.NativeContext that = (testmodule.proxies.NativeContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestModule.NativeContext";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testnativedraggablelist.proxies;

public class NativeContext implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nativeContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestNativeDraggableList.NativeContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DropData("DropData"),
		DraggedItemID("DraggedItemID");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public NativeContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected NativeContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nativeContextMendixObject)
	{
		if (nativeContextMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, nativeContextMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.nativeContextMendixObject = nativeContextMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testnativedraggablelist.proxies.NativeContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testnativedraggablelist.proxies.NativeContext(context, mendixObject);
	}

	public static testnativedraggablelist.proxies.NativeContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testnativedraggablelist.proxies.NativeContext.initialize(context, mendixObject);
	}

	/**
	 * @return value of DropData
	 */
	public final java.lang.String getDropData()
	{
		return getDropData(getContext());
	}

	/**
	 * @param context
	 * @return value of DropData
	 */
	public final java.lang.String getDropData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DropData.toString());
	}

	/**
	 * Set value of DropData
	 * @param dropdata
	 */
	public final void setDropData(java.lang.String dropdata)
	{
		setDropData(getContext(), dropdata);
	}

	/**
	 * Set value of DropData
	 * @param context
	 * @param dropdata
	 */
	public final void setDropData(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String dropdata)
	{
		getMendixObject().setValue(context, MemberNames.DropData.toString(), dropdata);
	}

	/**
	 * @return value of DraggedItemID
	 */
	public final java.lang.String getDraggedItemID()
	{
		return getDraggedItemID(getContext());
	}

	/**
	 * @param context
	 * @return value of DraggedItemID
	 */
	public final java.lang.String getDraggedItemID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DraggedItemID.toString());
	}

	/**
	 * Set value of DraggedItemID
	 * @param draggeditemid
	 */
	public final void setDraggedItemID(java.lang.String draggeditemid)
	{
		setDraggedItemID(getContext(), draggeditemid);
	}

	/**
	 * Set value of DraggedItemID
	 * @param context
	 * @param draggeditemid
	 */
	public final void setDraggedItemID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String draggeditemid)
	{
		getMendixObject().setValue(context, MemberNames.DraggedItemID.toString(), draggeditemid);
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nativeContextMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testnativedraggablelist.proxies.NativeContext that = (testnativedraggablelist.proxies.NativeContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
